<?php
// auto-generated by sfDoctrineAdmin
// date: 2008/05/06 16:01:24
?>
<?php

/**
 * tab actions.
 *
 * @package    sofav
 * @subpackage tab
 * @author     Fabien Potencier <fabien.potencier@symfony-project.com>
 * @author     Olivier Verdier <Olivier.Verdier@gmail.com>
 * @version    SVN: $Id: actions.class.php 5639 2007-10-23 14:27:18Z Eric.Fredj $
 */
class tabActions extends sfActions
{
  public function executeIndex ()
  {
    return $this->forward('tab', 'list');
  }

  public function executeList ()
  {
#  	$this->tabs = Doctrine::getTable('Tab')->findAll();

  	$this->tabs = TabTable::getUserTabs( $this->getUser()->getId() );

  }

  public function executeShow ()
  {
    $this->tab = Doctrine::getTable('Tab')->find($this->getRequestParameter('id'));
    $this->forward404Unless($this->tab);
  }

  public function executeCreate ()
  {
    $this->tab = new Tab();
    $this->setTemplate('edit');
  }

  public function executeEdit ()
  {
    $this->tab = Doctrine::getTable('Tab')->find($this->getRequestParameter('id'));
    $this->forward404Unless($this->tab);
  }

  public function executeDelete ()
  {
    $this->tab = Doctrine::getTable('Tab')->find($this->getRequestParameter('id'));

    $this->forward404Unless($this->tab);

    try
    {
      $this->tab->delete();
      $this->redirect('tab/list');
    }
    catch (Doctrine_Exception $e)
    {
      $this->getRequest()->setError('delete', 'Could not delete the selected Tab. Make sure it does not have any associated items.');
      return $this->forward('tab', 'list');
    }
  }

  public function executeUpdate ()
  {
    if (!$this->getRequestParameter('id'))
    {
      $tab = new Tab();
    }
    else
    {
      $tab = Doctrine::getTable('Tab')->find($this->getRequestParameter('id'));
      $this->forward404Unless($tab);
    }

    $formData = $this->getRequestParameter('tab');


/*
    if ($newValue = $formData['user_id'])
    {
	     $tab->set('user_id', $newValue);
    }
*/
	if ($newValue = $this->getUser()->getId()) {
		$tab->set('user_id', $newValue);
	}


    if ($newValue = $formData['title'])
    {
	     $tab->set('title', $newValue);
    }

    $tab->save();

    return $this->redirect('tab/show?id='.$tab->id);
  }


	public function executeShowTab() {

	#	$this->setTemplate('show');

		$q	= Doctrine_Query::create();
		$q->from('User u')
			->leftJoin('Tag t')
			->addWhere('u.username = ?', $this->getRequestParameter('username'))
			->addWhere('t.title = ?', $this->getRequestParameter('title'));

		$tabs	= $q->execute();

/*
		$q = new Doctrine_RawSql();

		$q->select('{t.*}, {u.*}')
		  ->from('tabs t LEFT JOIN users u ON t.user_id = u.id')
		  ->addComponent('t', 'Tab')
		  ->addComponent('u', 'User');

		$tabs = $q->execute();
*/

		$this->tab	= $tabs[0];

	}


}
